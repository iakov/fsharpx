Mono JIT compiler version 3.0.1 (master/c5039cb Sun Dec  2 13:12:27 MSK 2012)
Copyright (C) 2002-2012 Novell, Inc, Xamarin Inc and Contributors. www.mono-project.com
	TLS:           __thread
	SIGSEGV:       altstack
	Notifications: epoll
	Architecture:  amd64
	Disabled:      none
	Misc:          softdebug 
	LLVM:          yes(3.2svn-mono)
	GC:            Included Boehm (with typed GC and Parallel Mark)
Seq vs OptimizedSeq performance ratio (Seq/OptimizedSeq stop time).
Greater ratio is better (for OptimizedSeq). Must be at least > 1.2

List (aka list<'a> aka FSharpList<T>)

10 elements, 2000000 iterations
Seq.exists          	2.4
Seq.exists2         	3.2
Seq.fold            	3
Seq.forall          	2.7
Seq.forall2         	3.1
Seq.iter            	2.2
Seq.iter2           	3
Seq.nth             	2.2
Seq.tryPick         	2.3
Total Seq vs OptimizedSeq: 14551ms vs 5299ms

10000 elements, 2000 iterations
Seq.exists          	3.8
Seq.exists2         	7.5
Seq.fold            	4.9
Seq.forall          	3.9
Seq.forall2         	8.6
Seq.iter            	2.9
Seq.iter2           	4.1
Seq.nth             	1.5
Seq.tryPick         	4.1
Total Seq vs OptimizedSeq: 4242ms vs 974ms

10000000 elements, 2 iterations
Seq.exists          	2.2
Seq.exists2         	4.8
Seq.fold            	3.4
Seq.forall          	3.4
Seq.forall2         	5.1
Seq.iter            	2.3
Seq.iter2           	3.7
Seq.nth             	1.1
Seq.tryPick         	2.3
Total Seq vs OptimizedSeq: 4658ms vs 1560ms

ResizeArray (aka System.Collections.Generic.List<T>)

10 elements, 2000000 iterations
Seq.exists          	1.6
Seq.exists2         	1.9
Seq.fold            	1.9
Seq.forall          	3.2
Seq.forall2         	1.8
Seq.iter            	1.3
Seq.iter2           	2.5
Seq.nth             	2.4
Seq.tryPick         	1.7
Total Seq vs OptimizedSeq: 12316ms vs 6235ms

10000 elements, 2000 iterations
Seq.exists          	2.9
Seq.exists2         	1.9
Seq.fold            	1.1
Seq.forall          	2.8
Seq.forall2         	2.1
Seq.iter            	2
Seq.iter2           	2.9
Seq.nth             	Infinity
Seq.tryPick         	2.8
Total Seq vs OptimizedSeq: 4023ms vs 1881ms

10000000 elements, 2 iterations
Seq.exists          	2.8
Seq.exists2         	1.9
Seq.fold            	1.2
Seq.forall          	2.7
Seq.forall2         	1.9
Seq.iter            	1.9
Seq.iter2           	2.9
Seq.nth             	Infinity
Seq.tryPick         	2.7
Total Seq vs OptimizedSeq: 3957ms vs 1840ms

Array

10 elements, 2000000 iterations
Seq.exists          	2.7
Seq.exists2         	2.6
Seq.fold            	3.5
Seq.forall          	2.4
Seq.forall2         	4.1
Seq.iter            	3.1
Seq.iter2           	2.6
Seq.nth             	3.4
Seq.tryPick         	2.3
Total Seq vs OptimizedSeq: 13245ms vs 4574ms

10000 elements, 2000 iterations
Seq.exists          	5.3
Seq.exists2         	11
Seq.fold            	6.9
Seq.forall          	5.3
Seq.forall2         	12
Seq.iter            	2.8
Seq.iter2           	5.8
Seq.nth             	Infinity
Seq.tryPick         	4.8
Total Seq vs OptimizedSeq: 5467ms vs 833ms

10000000 elements, 2 iterations
Seq.exists          	5.2
Seq.exists2         	11
Seq.fold            	6.7
Seq.forall          	5.2
Seq.forall2         	12
Seq.iter            	2.8
Seq.iter2           	5.8
Seq.nth             	Infinity
Seq.tryPick         	4.8
Total Seq vs OptimizedSeq: 5411ms vs 842ms
