Mono JIT compiler version 2.10.8.1 (Debian 2.10.8.1-5ubuntu1)
Copyright (C) 2002-2011 Novell, Inc, Xamarin, Inc and Contributors. www.mono-project.com
	TLS:           __thread
	SIGSEGV:       altstack
	Notifications: epoll
	Architecture:  amd64
	Disabled:      none
	Misc:          softdebug 
	LLVM:          supported, not enabled.
	GC:            Included Boehm (with typed GC and Parallel Mark)
Seq vs OptimizedSeq performance ratio (Seq/OptimizedSeq stop time).
Greater ratio is better (for OptimizedSeq). Must be at least > 1.2

List (aka list<'a> aka FSharpList<T>)

10 elements, 2000000 iterations
Seq.exists          	2.2
Seq.exists2         	3.1
Seq.fold            	2.1
Seq.forall          	2.4
Seq.forall2         	2.9
Seq.iter            	2.1
Seq.iter2           	2.9
Seq.nth             	1.4
Seq.tryPick         	2.6
Total Seq vs OptimizedSeq: 10460ms vs 4251ms

10000 elements, 2000 iterations
Seq.exists          	4.1
Seq.exists2         	7.4
Seq.fold            	6
Seq.forall          	4.3
Seq.forall2         	7.4
Seq.iter            	2.9
Seq.iter2           	4.5
Seq.nth             	1.6
Seq.tryPick         	4.3
Total Seq vs OptimizedSeq: 4410ms vs 967ms

10000000 elements, 2 iterations
Seq.exists          	2.3
Seq.exists2         	5.2
Seq.fold            	3.6
Seq.forall          	2.3
Seq.forall2         	5.2
Seq.iter            	2.4
Seq.iter2           	4
Seq.nth             	1.2
Seq.tryPick         	2.3
Total Seq vs OptimizedSeq: 4691ms vs 1541ms

ResizeArray (aka System.Collections.Generic.List<T>)

10 elements, 2000000 iterations
Seq.exists          	1.9
Seq.exists2         	1.9
Seq.fold            	1.7
Seq.forall          	2.7
Seq.forall2         	2
Seq.iter            	1.9
Seq.iter2           	2.5
Seq.nth             	3.7
Seq.tryPick         	1.6
Total Seq vs OptimizedSeq: 10825ms vs 5188ms

10000 elements, 2000 iterations
Seq.exists          	2.5
Seq.exists2         	2.2
Seq.fold            	1.7
Seq.forall          	2.7
Seq.forall2         	2.2
Seq.iter            	2.5
Seq.iter2           	3.3
Seq.nth             	Infinity
Seq.tryPick         	2.7
Total Seq vs OptimizedSeq: 4847ms vs 1941ms

10000000 elements, 2 iterations
Seq.exists          	2.4
Seq.exists2         	2.2
Seq.fold            	1.7
Seq.forall          	3.7
Seq.forall2         	2.2
Seq.iter            	2.4
Seq.iter2           	3.3
Seq.nth             	Infinity
Seq.tryPick         	2.6
Total Seq vs OptimizedSeq: 4947ms vs 1947ms

Array

10 elements, 2000000 iterations
Seq.exists          	2.7
Seq.exists2         	3.9
Seq.fold            	3.7
Seq.forall          	2.3
Seq.forall2         	3.9
Seq.iter            	2.2
Seq.iter2           	3.5
Seq.nth             	3.2
Seq.tryPick         	2.1
Total Seq vs OptimizedSeq: 11040ms vs 3574ms

10000 elements, 2000 iterations
Seq.exists          	5
Seq.exists2         	12
Seq.fold            	6.6
Seq.forall          	5.1
Seq.forall2         	11
Seq.iter            	2.8
Seq.iter2           	6.1
Seq.nth             	Infinity
Seq.tryPick         	4.7
Total Seq vs OptimizedSeq: 5376ms vs 824ms

10000000 elements, 2 iterations
Seq.exists          	4.9
Seq.exists2         	11
Seq.fold            	6.5
Seq.forall          	4.9
Seq.forall2         	11
Seq.iter            	2.8
Seq.iter2           	6
Seq.nth             	Infinity
Seq.tryPick         	4.6
Total Seq vs OptimizedSeq: 5363ms vs 834ms
