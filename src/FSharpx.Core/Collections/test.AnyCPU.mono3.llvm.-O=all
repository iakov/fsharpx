Mono JIT compiler version 3.0.1 (master/c5039cb Sun Dec  2 13:12:27 MSK 2012)
Copyright (C) 2002-2012 Novell, Inc, Xamarin Inc and Contributors. www.mono-project.com
	TLS:           __thread
	SIGSEGV:       altstack
	Notifications: epoll
	Architecture:  amd64
	Disabled:      none
	Misc:          softdebug 
	LLVM:          yes(3.2svn-mono)
	GC:            Included Boehm (with typed GC and Parallel Mark)
Seq vs OptimizedSeq performance ratio (Seq/OptimizedSeq stop time).
Greater ratio is better (for OptimizedSeq). Must be at least > 1.2

List (aka list<'a> aka FSharpList<T>)

10 elements, 2000000 iterations
Seq.exists          	2.4
Seq.exists2         	3.1
Seq.fold            	2.2
Seq.forall          	1.7
Seq.forall2         	3
Seq.iter            	1.8
Seq.iter2           	2.8
Seq.nth             	1.9
Seq.tryPick         	2.8
Total Seq vs OptimizedSeq: 12025ms vs 4897ms

10000 elements, 2000 iterations
Seq.exists          	3.4
Seq.exists2         	6.1
Seq.fold            	4.4
Seq.forall          	3.4
Seq.forall2         	6.2
Seq.iter            	2.8
Seq.iter2           	2.7
Seq.nth             	1.3
Seq.tryPick         	3.4
Total Seq vs OptimizedSeq: 3243ms vs 929ms

10000000 elements, 2 iterations
Seq.exists          	2
Seq.exists2         	4
Seq.fold            	2.4
Seq.forall          	1.9
Seq.forall2         	3.9
Seq.iter            	2
Seq.iter2           	2.7
Seq.nth             	1
Seq.tryPick         	1.9
Total Seq vs OptimizedSeq: 3542ms vs 1530ms

ResizeArray (aka System.Collections.Generic.List<T>)

10 elements, 2000000 iterations
Seq.exists          	2
Seq.exists2         	2.3
Seq.fold            	2.2
Seq.forall          	2.9
Seq.forall2         	3.3
Seq.iter            	1.8
Seq.iter2           	2.4
Seq.nth             	2.2
Seq.tryPick         	2.2
Total Seq vs OptimizedSeq: 11491ms vs 4862ms

10000 elements, 2000 iterations
Seq.exists          	3.4
Seq.exists2         	3.5
Seq.fold            	2.7
Seq.forall          	4.1
Seq.forall2         	3.6
Seq.iter            	3
Seq.iter2           	2.8
Seq.nth             	Infinity
Seq.tryPick         	4
Total Seq vs OptimizedSeq: 3036ms vs 884ms

10000000 elements, 2 iterations
Seq.exists          	3.3
Seq.exists2         	3.6
Seq.fold            	2.4
Seq.forall          	3.6
Seq.forall2         	3.5
Seq.iter            	3
Seq.iter2           	3.5
Seq.nth             	Infinity
Seq.tryPick         	3.6
Total Seq vs OptimizedSeq: 2968ms vs 862ms

Array

10 elements, 2000000 iterations
Seq.exists          	2.8
Seq.exists2         	3.4
Seq.fold            	2.6
Seq.forall          	3.5
Seq.forall2         	4
Seq.iter            	2.1
Seq.iter2           	3.4
Seq.nth             	2.7
Seq.tryPick         	1.7
Total Seq vs OptimizedSeq: 11585ms vs 3969ms

10000 elements, 2000 iterations
Seq.exists          	6.5
Seq.exists2         	12
Seq.fold            	7.5
Seq.forall          	6.3
Seq.forall2         	12
Seq.iter            	3.7
Seq.iter2           	7.3
Seq.nth             	Infinity
Seq.tryPick         	5.7
Total Seq vs OptimizedSeq: 4711ms vs 611ms

10000000 elements, 2 iterations
Seq.exists          	6.4
Seq.exists2         	12
Seq.fold            	7.4
Seq.forall          	6.2
Seq.forall2         	12
Seq.iter            	3.7
Seq.iter2           	7.2
Seq.nth             	Infinity
Seq.tryPick         	5.4
Total Seq vs OptimizedSeq: 4704ms vs 626ms
